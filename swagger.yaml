swagger: '2.0'
info:
  description: TutorKrub API eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2MTYwNGNhOGI1M2E2OGUzY2FiMmY3MGQiLCJpYXQiOjE2NDk3MjcwMDIsImV4cCI6MTY1MDMzMTgwMn0.KIEC4HoCVpS_1DyVVresBdRHK5n5YmD44Tj1HetPgv4
  version: 1.0.0
  title: TutorKrub API
  contact:
    email: support@tutorkrub.com
# host: petstore.swagger.io
# basePath: /v2
tags:
  - name: authen
    description:
  - name: register
    description:
  - name: loginAccount
    description:
  - name: user
    description:
  - name: tutor
    description:
  - name: course
    description:
  - name: appointment
    description:
  - name: favorite
    description:
  - name: search
    description:
  - name: payment
    description:
  - name: omise
    description:
# schemes:
# - http
paths:
  /favorites:
    get:
      tags:
        - favorite
      security:
        - api_key: []
      responses: 
        200:
          description: success
  /favorites/tutors/{tutorId}:
    put:
      tags:
        - favorite
      security:
        - api_key: [ ]
      parameters:
        - in: path
          name: tutorId
          type: string
      responses:
        200:
          description: ok
    delete:
      tags:
        - favorite
      security:
        - api_key: [ ]
      parameters:
        - in: path
          name: tutorId
          type: string
      responses:
        200:
          description: ok
  /authen/checkLogin:
    get:
      tags:
        - authen
      security:
        - api_key: [ ]
      responses:
        200:
          description: ok
          schema:
            type: object
            properties:
              loginStatus:
                type: string
              user:
                $ref: '#/definitions/User'
  /register/:
    post:
      tags:
        - register
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/registerModel'
      responses:
        200:
          description: ok
        400:
          description: ok
          schema:
            $ref: '#/definitions/ErrorResponse'
  /register/tutor:
    post:
      tags:
        - register
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/registerTutorModel'
      responses:
        200:
          description: ok
        400:
          description: ok
          schema:
            $ref: '#/definitions/ErrorResponse'

  /register/checkemail:
    post:
      tags:
        - register
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              email:
                type: string
      responses:
        200:
          description: ok

  /register/checkkrubid:
    post:
      tags:
        - register
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              krubId:
                type: string
      responses:
        200:
          description: ok
  /register/fb:
    post:
      tags:
        - register
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              accessToken:
                type: string
      responses:
        200:
          description: ok

  /authen/login:
    post:
      tags:
        - authen
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              email:
                type: string
              password:
                type: string
            example:
              email: gg@g.com
              password: gg
      responses:
        200:
          description: ok
  /authen/logout:
    get:
      tags:
        - authen
      parameters: []
      responses:
        200:
          description: ok
  /loginaccounts/{accountId}/email:
    put:
      tags:
        - loginAccount
      security:
        - api_key: [ ]
      parameters:
        - in: path
          name: accountId
          type: string
          required: true
      responses:
        200:
          description: ok
  /loginaccounts/{accountId}/password:
    put:
      tags:
        - loginAccount
      security:
        - api_key: [ ]
      parameters:
        - in: path
          name: accountId
          type: string
          required: true
      responses:
        200:
          description: ok

  /users/me:
    put:
      tags:
        - user
      security:
        - api_key: [ ]
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/User'
      responses:
        200:
          description: ok
        401:
          description: unauthorized
    get:
      tags:
        - user
      security:
        - api_key: [ ]
      parameters: []
      responses:
        200:
          description: ok
        401:
          description: unauthorized
  /users/me/avatar:
    post:
      tags:
        - user
      security:
        - api_key: [ ]
      consumes:
        - multipart/form-data
      parameters:
        - in: formData
          name: file
          type: file
      responses:
        200:
          description: ok
  /tutors:
    get:
      tags:
        - tutor
      security:
        - api_key: [ ]
      parameters: [ ]
      responses:
        200:
          description: success
        401:
          description: unauthorized
    post:
      tags:
        - tutor
      security:
        - api_key: [ ]
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/TutorRegistration'
      responses:
        200:
          description: ok
    put:
      tags:
        - tutor
      security:
        - api_key: [ ]
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Tutor'
      responses:
        200:
          description: ok
  /tutors/educations:
    put:
      tags:
        - tutor
      security:
        - api_key: [ ]
      parameters:
        - in: body
          name: education
          schema:
            $ref: '#/definitions/Education'
      responses:
        200:
          description: ok
    post:
      tags:
        - tutor
      security:
        - api_key: [ ]
      parameters:
        - in: body
          name: education
          schema:
            $ref: '#/definitions/Education'
      responses:
        200:
          description: ok
  /tutors/communicationchannels:
    put:
      tags:
        - tutor
      security:
        - api_key: [ ]
      parameters:
        - in: body
          name: education
          schema:
            $ref: '#/definitions/Education'
      responses:
        200:
          description: ok
    post:
      tags:
        - tutor
      security:
        - api_key: [ ]
      parameters:
        - in: body
          name: education
          schema:
            $ref: '#/definitions/Education'
      responses:
        200:
          description: ok
  /tutors/additionaldetails:
    put:
      tags:
        - tutor
      security:
        - api_key: [ ]
      parameters:
        - in: body
          name: additionalDetails
          schema:
            type: array
            items:
              type: string
      responses:
        200:
          description: ok
  /courses:
    get:
      tags:
        - course
      security:
        - api_key: [ ]
      parameters: [ ]
      responses:
        200:
          description: success
        401:
          description: unauthorized
    post:
      tags:
        - course
      security:
        - api_key: [ ]
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Course'
      responses:
        200:
          description: ok
        405:
          description: invalid input
  /courses/{courseId}:
    put:
      tags:
        - course
      security:
        - api_key: [ ]
      parameters:
        - in: path
          name: courseId
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Course'
      responses:
        200:
          description: ok
        405:
          description: invalid input
  /appointments:
    post:
      tags:
        - appointment
      security:
        - api_key: [ ]
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/appointment'
      responses:
        200:
          description: ok
        405:
          description: invalid input
    get:
      tags:
        - appointment
      security:
        - api_key: [ ]
      parameters: []
      responses:
        200:
          description: success
        401:
          description: unauthorized
  /appointments/{appointmentId}/state:
    put:
      tags:
        - appointment
      security:
        - api_key: [ ]
      parameters:
        - in: path
          name: appointmentId
          type: string
          format: uuid
          required: true
        - in: query
          name: state
          type: string
      responses:
        200:
          description: ok
        401:
          description: unauthorized
        403:
          description: forbidden
  /appointments/{appointmentId}/messages:
    post:
      tags:
        - appointment
      security:
        - api_key: [ ]
      parameters:
        - in: path
          name: appointmentId
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: ok
        401:
          description: unauthorizef
        403:
          description: forbidden
    get:
      tags:
        - appointment
      security:
        - api_key: [ ]
      parameters:
        - in: path
          name: appointmentId
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: ok
        401:
          description: unauthorize
        403:
          description: forbidden
  /search/tutors:
    get:
      tags:
        - search
      parameters:
        - name: id
          in: query
          type: string
        - name: subject
          in: query
          type: string
        - name: level
          in: query
          type: string
      responses:
        200:
          description: success
          schema:
            type: array
            items:
              $ref: '#/definitions/Search'
  /search/courses:
    get:
      tags:
        - search
      parameters:
        - name: id
          in: query
          type: string
        - name: tutorid
          in: query
          type: string
      responses:
        200:
          description: success
          schema:
            type: array
            items:
              $ref: '#/definitions/Search'
  /payments:
    put:
      tags:
        - payment
      security:
        - api_key: [ ]
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              courseId:
                type: string
              amount:
                type: number
              scheduleDate:
                type: string
              scheduleHour:
                type: number
            example:
              courseId: 62f1241aec23586e18f4234f
              price: 110
              scheduleDate: 20220818
              scheduleHour: 1
      responses:
        200:
          description: success
  /omise/promptpay/qrcode:
    post:
      tags:
        - omise
      security:
        - api_key: [ ]
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              courseId:
                type: string
              scheduleDate:
                type: string
              scheduleHour:
                type: number
              price:
                type: number
            example:
              courseId: 62f1241aec23586e18f4234f
              scheduleDate: 20220818
              scheduleHour: 1
              price: 110
      responses:
        200:
          description: success
securityDefinitions:
  api_key:
    type: apiKey
    name: accesstoken
    in: header
definitions:
  availability:
    type: object
    properties:
      isRecurring:
        type: boolean
      recurringHex:
        type: string
      nonRecurringHex:
        type: string
      nonRecurringStartDate:
        type: string
  course:
    type: object
    properties:
      id:
        type: integer
        format: int64
      title:
        type: string
      description:
        type: string
      subject:
        type: string
      schoolLevel:
        type: string
      price:
        type: integer
        format: int32
      tutorId:
        type: integer
        format: int64
  registerModel:
    type: object
    properties:
      loginAccount:
        $ref: '#/definitions/loginAccount'
      user:
        $ref: '#/definitions/User'
  registerTutorModel:
    type: object
    properties:
      email:
        type: string
      password:
        type: string
      krubId:
        type: string
      teachSubjects:
        type: array
        items:
          type: string
      teachLevels:
        type: array
        items:
          type: string
      tutorPrice:
        type: number
  loginAccount:
    type: object
    properties:
      id:
        type: string
        format: uuid
      email:
        type: string
        format: email
      password:
        type: string
      userId:
        type: string
        format: uuid
  User:
    type: object
    properties:
      id:
        type: string
        format: uuid
      username:
        type: string
      name:
        type: string
      avatarUrl:
        type: string
        format: uri
      zoomId:
        type: string
      skypeId:
        type: string
      publicProfile:
        $ref: '#/definitions/PublicProfile'
  PublicProfile:
    type: object
    properties:
      id:
        type: string
        format: uuid
      name:
        type: string
      avatarUrl:
        type: string
        format: uri
  Course:
    type: object
    properties:
      id:
        type: string
        format: uuid
      title:
        type: string
      price:
        type: number
  appointment:
    type: object
    properties:
      id:
        type: string
        format: uuid
      courseId:
        type: string
        format: uuid
      tutorId:
        type: string
        format: uuid
      studentId:
        type: string
        format: uuid
      startTime:
        type: string
        format: date-time
      period:
        type: number
      status:
        type: string
  TutorRegistration:
    type: object
    properties:
      teachSubjects:
        type: array
        items:
          type: string
      teachLevels:
        type: array
        items:
          type: string
      price:
        type: number
  Tutor:
    type: object
    properties:
      teachSubjects:
        type: array
        items:
          type: string
      teachLevels:
        type: array
        items:
          type: string
      price:
        type: number
      educations:
        type: array
        items:
          $ref: '#/definitions/Education'
      commucationChannels:
        type: array
        items:
          $ref: '#/definitions/CommucationChannel'
      onsiteDistrictCode:
        type: number
      additionalDetails:
        type: array
        items:
          type: string
  Education:
    type: object
    properties:
      level:
        type: string
      school:
        type: string
      gpa:
        type: number
  CommucationChannel:
    type: object
    properties:
      channel:
        type: string
      id:
        type: string
  Search:
    type: object
    properties:
      name:
        type: string
      avatarUrl:
        type: string
      teachSubjects:
        type: array
        items:
          type: string
      teachLevels:
        type: array
        items:
          type: string
      price:
        type: number
      educations:
        type: array
        items:
          $ref: '#/definitions/Education'
      commucationChannels:
        type: array
        items:
          $ref: '#/definitions/CommucationChannel'
      onsiteDistrictCode:
        type: number
      additionalDetails:
        type: array
        items:
          type: string
  ErrorResponse:
    type: object
    properties:
      error:
        type: object
        properties:
          message:
            type: string
          code:
            type: number
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
# Added by API Auto Mocking Plugin
# host: 139.59.216.150:8080
# host: localhost:3000
basePath: /api
schemes:
  - http
